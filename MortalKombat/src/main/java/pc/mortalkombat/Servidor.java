/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package pc.mortalkombat;

import java.io.ObjectInputStream;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.ArrayList;

/**
 *
 * @author sebastianqr.2208
 */
public class Servidor extends javax.swing.JFrame implements Runnable {
    ArrayList<ArrayList<String>> usuarios = new ArrayList<>(); //matriz de usuarios
    private int puerto = 10201;
    /**
     * Creates new form Servidor
     */
    public Servidor() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        Thread entradaDatos = new Thread(this);
        entradaDatos.start();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void reconocerMensaje(String mensaje){
        String[] partes = mensaje.split("-");
        /*
        Tipos de mensaje:
        -nuevo -nombre -host(valor booleano) -port -password
         */

        switch(partes[0]){
            case "nuevo":
                ArrayList<String> usuario = new ArrayList<>();
                usuario.add(partes[1]);
                usuario.add(partes[2]);
                usuarios.add(usuario);
                break;
            case "login":
                break;
            case "ataque":
                break;
            case "rendicion":
                break;
            case "salir":
                break;
        }

    }

    /**
     * @param args the command line arguments
     */

    @Override
    public void run() {

        while(true){
            ServerSocket llegadaMensaje = null;
            try{
                llegadaMensaje = new ServerSocket(puerto);
                ObjetoEnvio entrada;
                String usuario, ip, mensajeCompleto;
                Socket llegadaServidor = llegadaMensaje.accept();
                ObjectInputStream llegada = new ObjectInputStream(llegadaServidor.getInputStream());

                entrada = (ObjetoEnvio) llegada.readObject();
                System.out.println("LLLEEEGGGGAA");
                usuario = entrada.getNombre();
                ip = entrada.getIp();
                mensajeCompleto = entrada.getMensaje();
                System.out.println(mensajeCompleto);
                llegadaServidor.close();
                llegada.close();
                llegadaMensaje.close();

            }
            catch(Exception e){
                System.out.println("Error: " + e.getMessage());
            }
        }
    }

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Servidor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Servidor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
